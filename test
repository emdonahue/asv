#!/bin/zsh

assert() {
       if [[ "$2" != "$3" ]]; then
       	   echo "Failure: $1\n\tExpected: $3\n\tReceived: $2"
	   ERR=1
       fi
}

local ASV='./asv'
local FS=$'\034'
local GS=$'\035'
local RS=$'\0'
local FS=$'\036'
local US=$'\037'

TMP=$(mktemp)
trap "rm $TMP" EXIT

THEAD="a${FS}b${RS}"
THEAD2="x${FS}y${RS}"
TBODY="c${FS}d${RS}e${FS}f${RS}"

assert 'check' "$($ASV check <(echo -n ${THEAD}c${RS}1${FS}f$RS) 2>&1)" "$(echo "Row 1 - Fields: 1, Expected: 2\nRow 2 Column 1 (a) - Type: strnum, Expected: string")" 

assert 'head' "$($ASV head 1 <(echo -n $THEAD$TBODY))" "$(echo -n "${THEAD}c${FS}d${RS}")"

assert 'header' "$($ASV header < <(echo -n $THEAD$TBODY) x y)" "$(echo -n $THEAD2$TBODY)"

assert 'join' "$($ASV join <(echo -n $THEAD$TBODY) <(echo -n $THEAD2$TBODY))" "$(echo "a${FS}b${FS}y${RS}c${FS}d${FS}d${RS}e${FS}f${FS}f${RS}")"

assert 'schema' "$($ASV schema <(echo -n $THEAD$TBODY))" "$(echo "id\tcolumn\n1\ta\n2\tb")"

assert 'sort' "$($ASV sort < <(echo -n ${THEAD2}e${FS}f${RS}c${FS}d${RS}))" "$(echo -n "$THEAD2$TBODY")"

assert 'substitute all' "$($ASV substitute "(a|c|d)" 'x\1x' <(echo -n $THEAD$TBODY))" "$(echo -n "${THEAD}xcx${FS}xdx${RS}e${FS}f${RS}")"

echo 'a b\nc d' > "$TMP"
assert 'tokenize' "$($ASV tokenize $TMP)" "$(echo -n "token${RS}a${RS}b${RS}c${RS}d${RS}")"
assert 'tokenize filenames' "$($ASV tokenize -f $TMP)" "$(echo -n "filename${FS}token${RS}$TMP${FS}a${RS}$TMP${FS}b${RS}$TMP${FS}c${RS}$TMP${FS}d${RS}")"

assert 'tsv2asv' "$($ASV tsv2asv <(echo "a\tb\nc\td\ne\tf"))" "$(echo -n "a${FS}b${RS}c${FS}d${RS}e${FS}f${RS}")"

[[ -z "$ERR" ]] && echo "All Tests Pass"
exit "$ERR"


